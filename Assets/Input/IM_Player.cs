//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/IM_Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @IM_Player: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @IM_Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IM_Player"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""8b586171-2036-4db1-a00e-89652b6d31a9"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""dbdfde2d-71c1-4980-947f-0579dccc334c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SlotbarHotkey1"",
                    ""type"": ""Button"",
                    ""id"": ""c398d692-6329-490d-b094-a7bc2037f061"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey2"",
                    ""type"": ""Button"",
                    ""id"": ""9a402bf2-90e4-4743-8760-b51f5e9530f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey3"",
                    ""type"": ""Button"",
                    ""id"": ""d989c809-973e-4349-a442-f3100918b708"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey4"",
                    ""type"": ""Button"",
                    ""id"": ""65fdf035-9476-4d34-8f37-2411640e3de0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey5"",
                    ""type"": ""Button"",
                    ""id"": ""3c70f2c6-b176-472d-abed-439d852d77b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey6"",
                    ""type"": ""Button"",
                    ""id"": ""2ad24174-34d2-47b0-be95-28ef60fe9fd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey7"",
                    ""type"": ""Button"",
                    ""id"": ""fc53ed2d-59be-4895-8a84-69a0c8e3b0c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey8"",
                    ""type"": ""Button"",
                    ""id"": ""8152b8d9-01d2-412f-a12a-3db56987f47a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlotbarHotkey9"",
                    ""type"": ""Button"",
                    ""id"": ""ae843314-824c-40a2-a9f4-09a8cb5835f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2d40c948-767a-46fc-b589-ef9091476e54"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""06dc53a3-e7f2-4263-8933-4297d71b4dff"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b5e28f88-5837-4b60-8783-f5dd82610ec5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d6ee5e39-4093-434d-b41f-c31495226dc1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8cf9ae01-a8b4-46eb-ba92-b5604b00eabc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""80a56404-6c5a-4a30-a38a-a3e41e642726"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30d70372-addb-4a3d-a84b-48ee280e554e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e913470-51eb-4e0d-8122-0b3535ecab46"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40b37906-a465-49d0-ab2d-bb8551d0847e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""812c1b9f-26dc-4297-91ae-07a4691a0fb5"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4f22ba0-3b78-4d90-9342-f205e37d3baa"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65e5a64a-df42-4e85-b1fe-8e2db56db45b"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a66a64d1-c653-44a8-b665-65b613fdb801"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52601f6b-aad6-47a2-811f-d3d9feddbfae"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlotbarHotkey9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MouseControls"",
            ""id"": ""141b56d9-8636-4e0c-ae17-617162c59c18"",
            ""actions"": [
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""1d69c5be-f859-487a-b9d9-5ce3b242e62d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2ec89d8a-441c-450a-a91e-0a4c19ffd36b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_Walk = m_PlayerControls.FindAction("Walk", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey1 = m_PlayerControls.FindAction("SlotbarHotkey1", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey2 = m_PlayerControls.FindAction("SlotbarHotkey2", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey3 = m_PlayerControls.FindAction("SlotbarHotkey3", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey4 = m_PlayerControls.FindAction("SlotbarHotkey4", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey5 = m_PlayerControls.FindAction("SlotbarHotkey5", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey6 = m_PlayerControls.FindAction("SlotbarHotkey6", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey7 = m_PlayerControls.FindAction("SlotbarHotkey7", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey8 = m_PlayerControls.FindAction("SlotbarHotkey8", throwIfNotFound: true);
        m_PlayerControls_SlotbarHotkey9 = m_PlayerControls.FindAction("SlotbarHotkey9", throwIfNotFound: true);
        // MouseControls
        m_MouseControls = asset.FindActionMap("MouseControls", throwIfNotFound: true);
        m_MouseControls_MousePosition = m_MouseControls.FindAction("MousePosition", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private List<IPlayerControlsActions> m_PlayerControlsActionsCallbackInterfaces = new List<IPlayerControlsActions>();
    private readonly InputAction m_PlayerControls_Walk;
    private readonly InputAction m_PlayerControls_SlotbarHotkey1;
    private readonly InputAction m_PlayerControls_SlotbarHotkey2;
    private readonly InputAction m_PlayerControls_SlotbarHotkey3;
    private readonly InputAction m_PlayerControls_SlotbarHotkey4;
    private readonly InputAction m_PlayerControls_SlotbarHotkey5;
    private readonly InputAction m_PlayerControls_SlotbarHotkey6;
    private readonly InputAction m_PlayerControls_SlotbarHotkey7;
    private readonly InputAction m_PlayerControls_SlotbarHotkey8;
    private readonly InputAction m_PlayerControls_SlotbarHotkey9;
    public struct PlayerControlsActions
    {
        private @IM_Player m_Wrapper;
        public PlayerControlsActions(@IM_Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_PlayerControls_Walk;
        public InputAction @SlotbarHotkey1 => m_Wrapper.m_PlayerControls_SlotbarHotkey1;
        public InputAction @SlotbarHotkey2 => m_Wrapper.m_PlayerControls_SlotbarHotkey2;
        public InputAction @SlotbarHotkey3 => m_Wrapper.m_PlayerControls_SlotbarHotkey3;
        public InputAction @SlotbarHotkey4 => m_Wrapper.m_PlayerControls_SlotbarHotkey4;
        public InputAction @SlotbarHotkey5 => m_Wrapper.m_PlayerControls_SlotbarHotkey5;
        public InputAction @SlotbarHotkey6 => m_Wrapper.m_PlayerControls_SlotbarHotkey6;
        public InputAction @SlotbarHotkey7 => m_Wrapper.m_PlayerControls_SlotbarHotkey7;
        public InputAction @SlotbarHotkey8 => m_Wrapper.m_PlayerControls_SlotbarHotkey8;
        public InputAction @SlotbarHotkey9 => m_Wrapper.m_PlayerControls_SlotbarHotkey9;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Add(instance);
            @Walk.started += instance.OnWalk;
            @Walk.performed += instance.OnWalk;
            @Walk.canceled += instance.OnWalk;
            @SlotbarHotkey1.started += instance.OnSlotbarHotkey1;
            @SlotbarHotkey1.performed += instance.OnSlotbarHotkey1;
            @SlotbarHotkey1.canceled += instance.OnSlotbarHotkey1;
            @SlotbarHotkey2.started += instance.OnSlotbarHotkey2;
            @SlotbarHotkey2.performed += instance.OnSlotbarHotkey2;
            @SlotbarHotkey2.canceled += instance.OnSlotbarHotkey2;
            @SlotbarHotkey3.started += instance.OnSlotbarHotkey3;
            @SlotbarHotkey3.performed += instance.OnSlotbarHotkey3;
            @SlotbarHotkey3.canceled += instance.OnSlotbarHotkey3;
            @SlotbarHotkey4.started += instance.OnSlotbarHotkey4;
            @SlotbarHotkey4.performed += instance.OnSlotbarHotkey4;
            @SlotbarHotkey4.canceled += instance.OnSlotbarHotkey4;
            @SlotbarHotkey5.started += instance.OnSlotbarHotkey5;
            @SlotbarHotkey5.performed += instance.OnSlotbarHotkey5;
            @SlotbarHotkey5.canceled += instance.OnSlotbarHotkey5;
            @SlotbarHotkey6.started += instance.OnSlotbarHotkey6;
            @SlotbarHotkey6.performed += instance.OnSlotbarHotkey6;
            @SlotbarHotkey6.canceled += instance.OnSlotbarHotkey6;
            @SlotbarHotkey7.started += instance.OnSlotbarHotkey7;
            @SlotbarHotkey7.performed += instance.OnSlotbarHotkey7;
            @SlotbarHotkey7.canceled += instance.OnSlotbarHotkey7;
            @SlotbarHotkey8.started += instance.OnSlotbarHotkey8;
            @SlotbarHotkey8.performed += instance.OnSlotbarHotkey8;
            @SlotbarHotkey8.canceled += instance.OnSlotbarHotkey8;
            @SlotbarHotkey9.started += instance.OnSlotbarHotkey9;
            @SlotbarHotkey9.performed += instance.OnSlotbarHotkey9;
            @SlotbarHotkey9.canceled += instance.OnSlotbarHotkey9;
        }

        private void UnregisterCallbacks(IPlayerControlsActions instance)
        {
            @Walk.started -= instance.OnWalk;
            @Walk.performed -= instance.OnWalk;
            @Walk.canceled -= instance.OnWalk;
            @SlotbarHotkey1.started -= instance.OnSlotbarHotkey1;
            @SlotbarHotkey1.performed -= instance.OnSlotbarHotkey1;
            @SlotbarHotkey1.canceled -= instance.OnSlotbarHotkey1;
            @SlotbarHotkey2.started -= instance.OnSlotbarHotkey2;
            @SlotbarHotkey2.performed -= instance.OnSlotbarHotkey2;
            @SlotbarHotkey2.canceled -= instance.OnSlotbarHotkey2;
            @SlotbarHotkey3.started -= instance.OnSlotbarHotkey3;
            @SlotbarHotkey3.performed -= instance.OnSlotbarHotkey3;
            @SlotbarHotkey3.canceled -= instance.OnSlotbarHotkey3;
            @SlotbarHotkey4.started -= instance.OnSlotbarHotkey4;
            @SlotbarHotkey4.performed -= instance.OnSlotbarHotkey4;
            @SlotbarHotkey4.canceled -= instance.OnSlotbarHotkey4;
            @SlotbarHotkey5.started -= instance.OnSlotbarHotkey5;
            @SlotbarHotkey5.performed -= instance.OnSlotbarHotkey5;
            @SlotbarHotkey5.canceled -= instance.OnSlotbarHotkey5;
            @SlotbarHotkey6.started -= instance.OnSlotbarHotkey6;
            @SlotbarHotkey6.performed -= instance.OnSlotbarHotkey6;
            @SlotbarHotkey6.canceled -= instance.OnSlotbarHotkey6;
            @SlotbarHotkey7.started -= instance.OnSlotbarHotkey7;
            @SlotbarHotkey7.performed -= instance.OnSlotbarHotkey7;
            @SlotbarHotkey7.canceled -= instance.OnSlotbarHotkey7;
            @SlotbarHotkey8.started -= instance.OnSlotbarHotkey8;
            @SlotbarHotkey8.performed -= instance.OnSlotbarHotkey8;
            @SlotbarHotkey8.canceled -= instance.OnSlotbarHotkey8;
            @SlotbarHotkey9.started -= instance.OnSlotbarHotkey9;
            @SlotbarHotkey9.performed -= instance.OnSlotbarHotkey9;
            @SlotbarHotkey9.canceled -= instance.OnSlotbarHotkey9;
        }

        public void RemoveCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);

    // MouseControls
    private readonly InputActionMap m_MouseControls;
    private List<IMouseControlsActions> m_MouseControlsActionsCallbackInterfaces = new List<IMouseControlsActions>();
    private readonly InputAction m_MouseControls_MousePosition;
    public struct MouseControlsActions
    {
        private @IM_Player m_Wrapper;
        public MouseControlsActions(@IM_Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @MousePosition => m_Wrapper.m_MouseControls_MousePosition;
        public InputActionMap Get() { return m_Wrapper.m_MouseControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MouseControlsActions set) { return set.Get(); }
        public void AddCallbacks(IMouseControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_MouseControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MouseControlsActionsCallbackInterfaces.Add(instance);
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
        }

        private void UnregisterCallbacks(IMouseControlsActions instance)
        {
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
        }

        public void RemoveCallbacks(IMouseControlsActions instance)
        {
            if (m_Wrapper.m_MouseControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMouseControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_MouseControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MouseControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MouseControlsActions @MouseControls => new MouseControlsActions(this);
    public interface IPlayerControlsActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnSlotbarHotkey1(InputAction.CallbackContext context);
        void OnSlotbarHotkey2(InputAction.CallbackContext context);
        void OnSlotbarHotkey3(InputAction.CallbackContext context);
        void OnSlotbarHotkey4(InputAction.CallbackContext context);
        void OnSlotbarHotkey5(InputAction.CallbackContext context);
        void OnSlotbarHotkey6(InputAction.CallbackContext context);
        void OnSlotbarHotkey7(InputAction.CallbackContext context);
        void OnSlotbarHotkey8(InputAction.CallbackContext context);
        void OnSlotbarHotkey9(InputAction.CallbackContext context);
    }
    public interface IMouseControlsActions
    {
        void OnMousePosition(InputAction.CallbackContext context);
    }
}
